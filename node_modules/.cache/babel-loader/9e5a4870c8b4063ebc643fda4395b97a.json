{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\mojave\\\\week4\\\\jmdb\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === \"\") {\n        endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      const {\n        searchTerm,\n        currentPage\n      } = this.state;\n      let endpoint = '';\n      this.setState({\n        loading: true\n      });\n\n      if (searchTerm === '') {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      const {\n        movies,\n        heroImage,\n        searchTerm\n      } = this.state;\n      fetch(endpoint).then(result => result.json()).then(result => {\n        this.setState({\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if (searchTerm === \"\") {\n            sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        });\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'));\n      this.setState({ ...state\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      heroImage,\n      loading,\n      currentPage,\n      totalPages,\n      searchTerm\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jmdb-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, heroImage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`,\n      title: heroImage.original_title,\n      text: heroImage.overview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jmdb-home-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FourColGrid, {\n      header: searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, movies.map((element, i) => /*#__PURE__*/React.createElement(MovieThumb, {\n      key: i,\n      clickable: true,\n      image: element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg',\n      movieId: element.id,\n      movieName: element.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }))), loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }\n    }) : null, currentPage <= totalPages && !loading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n      text: \"Load More\",\n      onClick: this.loadMoreItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/mojave/week4/jmdb/src/components/Home/Home.js"],"names":["React","Component","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","componentDidMount","getItem","parse","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      const endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  loadMoreItems = () => {\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = '';\n    this.setState({ loading: true })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if (searchTerm === \"\") {\n            sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        })\n      })\n      .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n    return (\n      <div className=\"jmdb-home\">\n        {heroImage ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems} />\n          </div> : null}\n        <div className=\"jmdb-home-grid\">\n          <FourColGrid\n            header={searchTerm ? 'Search Result' : 'Popular Movies'}\n            loading={loading}\n          >\n            {movies.map((element, i) => (\n              <MovieThumb\n                key={i}\n                clickable={true}\n                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            ))}\n          </FourColGrid>\n          {loading ? <Spinner /> : null}\n          {(currentPage <= totalPages && !loading) ?\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n            : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}